---

- name: Get Balancer
  uri:
    url: "https://cloudinfra-gw.portal.checkpoint.com/api/v1/ci-saml/authenticate?email={{email}}&src_app=cloudinfra&sourceProductId=849c6c68-acab-4ce3-a59d-f1e53d24d88b&originalPath=%2Fdashboard%2Fsettings%2Fidentity-access"
    method: GET
    return_content: yes
  register: res
  failed_when: res.status != 200 and res.status != 201 and res.status != 204

- set_fact:
    url_checkpoint: "{{res.json.tenantGateway.url}}"

- name: Make HTTP POST Request to get Token
  uri:
    url: "https://cloudinfra-gw.portal.checkpoint.com/auth/user"
    method: POST
    headers:
      Content-Type: "application/json"
    body_format: json
    body: "{{ payload_x | to_json }}"
  register: http_result

- set_fact:
    cookie: "{{http_result.cookies_string}}"

- set_fact:
    x_token: "{{http_result.json.csrf}}"

- set_fact:
    phone2fa: "{{http_result.json.user.phone2fa}}"

- set_fact:
    phone: "{{http_result.json.user.phone}}"

- set_fact:
    aap2fa: "{{http_result.json.user.authenticatorAppConfigured}}"

- name: Check if file exists
  stat:
    path: "{{ auth2facode }}"
  register: file_stat
  when: aap2fa == true or phone2fa == true

- name: Create file if it doesn't exist
  file:
    path: "{{ auth2facode }}"
    state: touch
  when: not file_stat.stat.exists and aap2fa == true or phone2fa == true

- name: Sleep 1 minute to Wait You executing playbook for input code from app generator or  sms
  ansible.builtin.pause:
    seconds: 180
  when: aap2fa == true or phone2fa == true

- name: Read file auth2facode
  shell: cat "{{ auth2facode }}"
  register: file_content
  changed_when: False
  when: aap2fa == true or phone2fa == true

- name: Ending the playbook cause the security code not successfull integrated
  meta: end_play
  when: file_content.stdout | length == 0

- set_fact:
    2facode: "{{file_content.stdout}}"

- name: Make HTTP POST to verify 2fa
  uri:
    url: "https://cloudinfra-gw.portal.checkpoint.com/auth/user/2fa/verify"
    method: POST
    headers:
      Content-Type: "application/json"
    body_format: json
    body: 
      token: "{{2facode}}"
  register: http_result
